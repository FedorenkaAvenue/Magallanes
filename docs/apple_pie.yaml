---
swagger: '2.0'
info:
  version: 0.0.1
  title: '@Apple_pie server API doc list'
  description: |
    last update: 02/02/2021 09:35
    все API сервера начинаются с /api роута
tags:
- name: sign
  description: Аутентификация
- name: auth
  description: Авторизация
- name: customer
  description: Для потребителя
- name: artist
  description: Для тату мастера
- name: user
  description: Общие данные о пользователях
paths:
  '/sign/up/email':
    post:
      tags:
      - sign
      summary: регистрация через email
      parameters:
      - name: name
        in: body
        description: user name
        required: true
        type: string
      - name: email
        in: body
        description: user email
        required: true
        type: string
      - name: password
        in: body
        description: user password
        required: true
        type: string
      - name: role
        in: body
        description: user role
        required: true
        schema:
          '$ref': '#/definitions/UserType'
      responses:
        '201':
          description: created
          schema:
            type: object
            properties:
              accessToken:
                type: string
        '409':
          description: Конфликт существующих данных
          schema:
            type: object
            properties:
              field:
                type: string
  '/sign/up/google':
    post:
      tags:
      - sign
      summary: регистрация через google
      parameters:
      - name: name
        in: body
        description: user name
        required: false
        type: string
      - name: credentials
        in: body
        description: google tokenId
        required: true
        type: string
      - name: role
        in: body
        description: user role
        required: true
        schema:
          '$ref': '#/definitions/UserType'
      responses:
        '201':
          description: created
          schema:
            type: object
            properties:
              accessToken:
                type: string
        '409':
          description: Конфликт существующих данных
          schema:
            type: object
            properties:
              field:
                type: string
  '/sign/up/facebook':
    post:
      tags:
      - sign
      summary: регистрация через facebook
      parameters:
      - name: name
        in: body
        description: user name
        required: false
        type: string
      - name: credentials
        in: body
        description: facebook accessToken
        required: true
        type: string
      - name: role
        in: body
        description: user role
        required: true
        schema:
          '$ref': '#/definitions/UserType'
      responses:
        '201':
          description: created
          schema:
            type: object
            properties:
              accessToken:
                type: string
        '409':
          description: Конфликт существующих данных
          schema:
            type: object
            properties:
              field:
                type: string
  '/sign/in/email':
    post:
      tags:
      - sign
      summary: log in через email
      parameters:
      - name: email
        in: body
        description: user email
        required: true
        type: string
      - name: password
        in: body
        description: user password
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              accessToken:
                type: string
        '403':
          description: Неверныe данные
  '/sign/in/google':
    post:
      tags:
      - sign
      summary: log in через google
      parameters:
      - name: credentials
        in: body
        description: google tokenId
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              accessToken:
                type: string
        '403':
          description: Пользователь не зарегистрирован
  '/sign/in/facebook':
    post:
      tags:
      - sign
      summary: log in через facebook
      parameters:
      - name: credentials
        in: body
        description: facebook tokenId
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              accessToken:
                type: string
        '403':
          description: Пользователь не зарегистрирован
  '/sign/out':
    get:
      tags:
      - sign
      summary: log out
      responses:
        '200':
          description: OK
  '/auth/refresh':
    get:
      tags:
      - auth
      summary: получить новый access и refresh токены
      responses:
        '201':
          description: created
          schema:
            type: object
            properties:
              accessToken:
                type: string
        '406':
          description: Просроченный или отсутствующий refresh токен
  '/customer/applist':
    get:
      tags:
      - customer
      summary: получить список всех заявок потребителя
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              '$ref': '#/definitions/Application'
        '403':
          description: Неверная роль
  '/customer/application':
    post:
      tags:
      - customer
      summary: создать заявку
      consumes:
      - multipart/form-data
      parameters:
      - name: title
        in: formData
        description: application title
        required: true
        type: string
      - name: descr
        in: formData
        description: application description
        required: true
        type: string
      - name: images
        in: formData
        required: true
        type: array
        items:
          type: file
      security:
        - BearerAuth: []
      responses:
        '201':
          description: Created
        '403':
          description: Неверная роль
  '/artist/sketchlist':
    get:
      tags:
      - artist
      summary: получить все эскизы тату мастера
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              '$ref': '#/definitions/Sketch'
        '403':
          description: Неверная роль
  '/user/profile/:id':
    get:
      tags:
      - user
      summary: получить все данные пользователя
      responses:
        '200':
          schema:
            $ref: '#/definitions/User'
        '404':
          description: юзер не найден
  '/user/profile':
    get:
      tags:
      - user
      summary: получить все данные авторизированого пользователя
      security:
        - BearerAuth: []
      responses:
        '200':
          schema:
            $ref: '#/definitions/User'
  '/user/preview':
    get:
      tags:
      - user
      summary: получить преью данные авторизированого пользователя
      security:
        - BearerAuth: []
      responses:
        '200':
          schema:
            $ref: '#/definitions/UserPreview'
  '/user/exist':
    get:
      tags:
      - user
      summary: проверить существуют ли такие данные в DB
      parameters:
      - name: name
        in: query
        description: check if name is existed in DB
        type: string
      - name: email
        in: query
        description: check if email is existed in DB
        type: string
      responses:
        '200':
          schema:
            type: object
            properties:
              exists:
                type: boolean
definitions:
  User:
    type: object
    properties:
      id:
        type: string
        description: string in uuid format
        required: true
      name:
        type: string
        required: true
      role:
        type: number
        enum:
        - 1
        - 2
        required: true
      verify:
        type: boolean
        description: user is verified by email
        required: true
      created_at:
        type: number
        description: user create date
        required: true
      photo:
        type: string
        description: image photo url
      applications:
        type: array
        items:
          $ref: '#/definitions/Application'
        description: array of application's id
        default: []
      sketches:
        type: array
        items:
          $ref: '#/definitions/Sketch'
        description: array of sketches's id
        default: []
  UserPreview:
    type: object
    properties:
      id:
        type: string
        description: string in uuid format
        required: true
      name:
        type: string
        required: true
      photo:
        type: string
        description: image photo url
  Application:
    type: object
    properties:
      id:
        type: string
        description: string id in uuid format
        required: true
      author:
        type: string
        description: user id
        required: true
      title:
        type: string
        required: true
      descr:
        type: string
        required: true
      images:
        type: array
        items:
          type: string
          description: image path
        required: true
      created_at:
        type: string
        required: true
  Sketch:
    type: object
    properties:
      id:
        type: string
        description: string id in uuid format
        required: true
      author:
        type: string
        description: user id
        required: true
      title:
        type: string
        required: true
      descr:
        type: string
        required: true
      images:
        type: array
        items:
          type: string
          description: image path
        required: true
      created_at:
        type: string
        required: true
  Session:
    type: object
    properties:
      userId:
        type: String
      refreshToken:
        type: String
      ua:
        type: String
        description: browser user agent
      fingerprint:
        type: String
      ip:
        type: String
      createAt:
        type: String
  UserType:
    type: number
    enum:
      - 1
      - 2

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
